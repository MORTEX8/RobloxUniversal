local P1000ToggleKey = "h" -- This will no longer be used for toggling

--[[
    Standing still will trick the hitbox, you won't be able to get hit.
    
    Modified to automatically disable desync for 300ms after shooting
    and while left mouse button is held down
    and removed the toggle functionality
    
    DO NOT EDIT BEYOND THIS POINT IF YOU DON'T UNDERSTAND WHAT IS GOING ON.
--]]

--// Services
checkcaller = checkcaller
newcclosure = newcclosure
hookmetamethod = hookmetamethod

local PastedSources = true -- Always enabled now
local DesyncDisabledUntil = 0 -- Time when desync should be re-enabled
local IsMouseButtonHeld = false -- Track if left mouse button is held down
local BruhXD = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Bullshit = LocalPlayer:GetMouse()

-- Listen for left mouse button clicks (shooting)
Bullshit.Button1Down:Connect(function()
    IsMouseButtonHeld = true
    -- Disable desync while button is held
    print("Desync disabled while mouse button held")
end)

Bullshit.Button1Up:Connect(function()
    IsMouseButtonHeld = false
    -- Disable desync for 300ms after shooting
    DesyncDisabledUntil = tick() + 0.3
    print("Desync disabled for 300ms after shooting")
end)

--// Desync_Source
function RandomNumberRange(a)
    return math.random(-a * 100, a * 100) / 100
end

function RandomVectorRange(a, b, c)
    return Vector3.new(RandomNumberRange(a), RandomNumberRange(b), RandomNumberRange(c))
end

local DesyncTypes = {}
BruhXD.Heartbeat:Connect(function()
    -- Check if desync is temporarily disabled due to shooting or button held
    local isDesyncDisabled = tick() < DesyncDisabledUntil or IsMouseButtonHeld
    
    if PastedSources == true and not isDesyncDisabled then
        DesyncTypes[1] = LocalPlayer.Character.HumanoidRootPart.CFrame
        DesyncTypes[2] = LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity

        local SpoofThis = LocalPlayer.Character.HumanoidRootPart.CFrame

        SpoofThis = SpoofThis * CFrame.new(Vector3.new(0, 0, 0))
        SpoofThis = SpoofThis * CFrame.Angles(math.rad(RandomNumberRange(180)), math.rad(RandomNumberRange(180)), math.rad(RandomNumberRange(180)))

        LocalPlayer.Character.HumanoidRootPart.CFrame = SpoofThis

        LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(1, 1, 1) * 16384

        BruhXD.RenderStepped:Wait()

        LocalPlayer.Character.HumanoidRootPart.CFrame = DesyncTypes[1]
        LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity = DesyncTypes[2]
    end
end)

--// Hook_CFrame
local XDDDDDD = nil
XDDDDDD = hookmetamethod(game, "__index", newcclosure(function(self, key)
    -- Check if desync is temporarily disabled due to shooting or button held
    local isDesyncDisabled = tick() < DesyncDisabledUntil or IsMouseButtonHeld
    
    if PastedSources == true and not isDesyncDisabled then
        if not checkcaller() then
            if key == "CFrame" and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character:FindFirstChild("Humanoid").Health > 0 then
                if self == LocalPlayer.Character.HumanoidRootPart then
                    return DesyncTypes[1] or CFrame.new()
                elseif self == LocalPlayer.Character.Head then
                    return DesyncTypes[1] and DesyncTypes[1] + Vector3.new(0, LocalPlayer.Character.HumanoidRootPart.Size / 2 + 0.5, 0) or CFrame.new()
                end
            end
        end
    end
    return XDDDDDD(self, key)
end))
